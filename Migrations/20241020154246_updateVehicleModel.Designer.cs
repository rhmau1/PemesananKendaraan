// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PemesananKendaraan.Models;

#nullable disable

namespace PemesananKendaraan.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241020154246_updateVehicleModel")]
    partial class updateVehicleModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("monitorKendaraan.Models.Approval", b =>
                {
                    b.Property<int>("approval_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("approval_id"));

                    b.Property<int>("approval_level")
                        .HasColumnType("int");

                    b.Property<DateTime>("approved_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("booking_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("is_approved")
                        .HasColumnType("bit");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("approval_id");

                    b.HasIndex("booking_id");

                    b.HasIndex("user_id");

                    b.ToTable("Approval");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Booking", b =>
                {
                    b.Property<Guid>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("driver_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("end_booking")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("start_booking")
                        .HasColumnType("datetime2");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("total_price")
                        .HasColumnType("int");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.Property<int>("vehicle_id")
                        .HasColumnType("int");

                    b.HasKey("booking_id");

                    b.HasIndex("driver_id");

                    b.HasIndex("user_id");

                    b.HasIndex("vehicle_id");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Driver", b =>
                {
                    b.Property<int>("driver_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("driver_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_available")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("driver_id");

                    b.ToTable("Driver");
                });

            modelBuilder.Entity("monitorKendaraan.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_role")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Vehicle", b =>
                {
                    b.Property<int>("vehicle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vehicle_id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<bool>("is_available")
                        .HasColumnType("bit");

                    b.Property<int>("ownership")
                        .HasColumnType("int");

                    b.Property<string>("plate_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rental_price_per_day")
                        .HasColumnType("int");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("vehicle_id");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Approval", b =>
                {
                    b.HasOne("monitorKendaraan.Models.Booking", "booking")
                        .WithMany("Approvals")
                        .HasForeignKey("booking_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("monitorKendaraan.Models.User", "user")
                        .WithMany("Approvals")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("booking");

                    b.Navigation("user");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Booking", b =>
                {
                    b.HasOne("monitorKendaraan.Models.Driver", "driver")
                        .WithMany("Bookings")
                        .HasForeignKey("driver_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("monitorKendaraan.Models.User", "user")
                        .WithMany("Bookings")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("monitorKendaraan.Models.Vehicle", "vehicle")
                        .WithMany("Bookings")
                        .HasForeignKey("vehicle_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("driver");

                    b.Navigation("user");

                    b.Navigation("vehicle");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Booking", b =>
                {
                    b.Navigation("Approvals");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Driver", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("monitorKendaraan.Models.User", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("monitorKendaraan.Models.Vehicle", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
